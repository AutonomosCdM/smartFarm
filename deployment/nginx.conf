# Nginx Configuration for SmartFarm AI
# Location: /etc/nginx/sites-available/smartfarm

server {
    listen 80;
    listen [::]:80;
    server_name smartfarm.autonomos.dev;

    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name smartfarm.autonomos.dev;

    # SSL Configuration (if using Let's Encrypt)
    # ssl_certificate /etc/letsencrypt/live/smartfarm.autonomos.dev/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/smartfarm.autonomos.dev/privkey.pem;

    # If using AWS ACM with CloudFront, SSL is handled by CloudFront
    # In that case, this server block might not be needed

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Logs
    access_log /var/log/nginx/smartfarm-access.log;
    error_log /var/log/nginx/smartfarm-error.log;

    # Max upload size (for file uploads)
    client_max_body_size 100M;

    # Proxy to Open WebUI
    location / {
        proxy_pass http://localhost:3001;
        proxy_http_version 1.1;

        # WebSocket support (required for Open WebUI)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Standard proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts
        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
    }

    # Health check endpoint
    location /health {
        proxy_pass http://localhost:3001/health;
        access_log off;
    }
}
